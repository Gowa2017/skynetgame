@startuml GameNode
' skinparam DefaultFontName WenQuanYi Zen Hei
' skinparam DefaultMonospacedFontName UbuntuMono-R
!include C4_Component.puml
!include C4_Dynamic.puml
Person(user, "User","User web, andorid, ios application to connection to game or login")
ContainerDb(gameDb, "GameDB", "Mongodb")
Container(loginServer, "LoginNode", "Skynet","Auth and notify gameserver")
Container_Boundary(gameServer, "GameNode"){
    Component(gated, "Gated", "Lua","Manage connections, notify loginserver when kicked and logout")
    Component(agent, "Agent", "Lua","Handle most of user requests and return a string to gated, or need communite with other service")
    Component(world, "World", "Lua","Make scene from maps, save all remote secene services, maintenance all player scene info")
    Component(scene, "Scene", "Lua","Manage all entitys(NPC, Player, Item, Event, ...)")
    Component(share, "ShareTable", "Lua","Share read only infos, every service can clone a table from the service by a pointer")
    Component(persist, "Persist", "Lua","Read and save data to database, or we should persist the data to database by a timer?, and a queue to save the data waitting to be persist")
    Component(war, "War", "Lua","Manage battle[s].")
}

Rel_R(gated,loginServer,"Register")
Rel(world,scene,"Newservice")
Rel_L(loginServer, gated,"Notify uid, secret","login")
Rel_U(gated, agent,"New","login")
Rel_D(gameDb, persist,"Load/Write")
Rel_D(persist, agent,"Load player data")
Rel_U(user, gated,"Connect Handshake Request","TCP,line base handshake, protobuf request")
Rel_U(gated, agent,"Request","rawcall")
Rel_L(agent,world,"Query map scene info","call")
Rel_D(agent,scene,"Enter scene")
Rel_Neighbor(gated,loginServer,"logout")
@enduml