@startuml Test
!include Lua.puml
title Service Gated
Container(loginnode, "LoginNode", "Skynet")
LService(agent,"Agent","","玩家代理")
LService(core,"Skynet Core","","引擎核心")
LService_Boundary(gateservice,"网关服务") {
    LModule_Boundary(gated,"Gated") {
        LTable(handlers,"Handlers", "","login_handler logout_handler kick_handler disconnect_handler request_handler register_handler")
    }
    LModule_Boundary(gateserver,"GateServer") {
        LTable(socketevhandler,"sockethandler","data\nmore\nopen\nclose\nerror\nwarning")
        LTable(gscmd,"cmd","open\nclose")
        LTable(gsfun,"functions","","openclient\ncloseclient")
    }

    LModule_Boundary(msgserver,"MsgServer") {
        LTable(msgcmd,"cmd","","cmd handler from the gated handlers")
        LTable(msghandler,"msghandler","","open\nconnect\ncommand\ndisconnect\nerror\nmessage")
        LTable(msgfun,"functions")
        LFunction(auth,"auth")
        LFunction(request,"request")
        Rel_L(msghandler, auth, "receive message of handshake")
        Rel_Neighbor(msghandler, request, "receive message of data")
    }

}

Rel_U(core, socketevhandler, "socket message(with subcmd)")
Rel_U(socketevhandler, msghandler, "socket message")
Rel_U(request, handlers, "call request_handler")
Rel_U(handlers, agent, "call","skynet.rawcall")
Rel_U(core, gscmd, "open/close socket server")
Rel_U(core, msgcmd, "login/logout/kick")
Rel_U(msgcmd, handlers, "call","login/logout/kick")
Rel_L(loginnode, handlers, "login_handler")
Rel_R(handlers, loginnode, "logout_handler")
@enduml
